---
# This is main tasks file for mysql role
# filename: roles/mysql/tasks/main.yml
# https://docs.ansible.com/ansible/latest/modules/mysql_user_module.html

 - name: Install mysql-server
   apt: name=mysql-server state=latest  update_cache=yes   
 

 # https://www.rollnorocks.com/2018/12/ansible-python-and-mysql-untangling-the-mess/
 # 

 - name: Install packages
   apt: name={{item}}
   with_items:
      - python3-pip
      - python3-mysqldb


 # https://stackoverflow.com/questions/16444306/ansible-idempotent-mysql-installation-playbook
 # https://docs.ansible.com/ansible/latest/modules/mysql_user_module.html
# Example /ect/mysql/my.cnf file for setting the root password
# [client]
# user=root
# password=n<_665{vS43y
 - name: copy .my.cnf file with root password credentials
   template: src=templates/my.cnf.j2 dest=/etc/mysql/my.cnf owner=root  mode=0600


# bind-address  Ansible Grant access by editing                 = 127.0.0.1   
 - name:  Grant access by editing /etc/mysql/mysql.conf.d/mysqld.cnf
   replace:
     path: /etc/mysql/mysql.conf.d/mysqld.cnf
     regexp: 'bind-address'
     replace: '# bind-address  Ansible Grant access by editing '
     
   
  
 #- name: Set root user password
 #    # If .my.cnf already exists, this will cause an mysql-root-password update.
 #  mysql_user:
 #   name: root
 #   password: "{{ mysql_root_password}}"
 #   check_implicit_admin: true

 # https://askubuntu.com/questions/766334/cant-login-as-mysql-user-root-from-normal-user-account-in-ubuntu-16-04



#  First, connect in sudo mysql
# 
#  sudo mysql -u root
# 
#  Check your accounts present in your db
# 
#  SELECT User,Host FROM mysql.user;
#  +------------------+-----------+
#  | User             | Host      |
#  +------------------+-----------+
#  | admin            | localhost |
#  | debian-sys-maint | localhost |
#  | magento_user     | localhost |
#  | mysql.sys        | localhost |
#  | root             | localhost |
# 
#  Delete current root@localhost account
# 
#  mysql> DROP USER 'root'@'localhost';
#  Query OK, 0 rows affected (0,00 sec)
# 
#  Recreate your user
# 
#  mysql> CREATE USER 'root'@'%' IDENTIFIED BY '';
#  Query OK, 0 rows affected (0,00 sec)
# 
#  Give permissions to your user (don't forget to flush privileges)
# 
#  mysql> GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;
#  Query OK, 0 rows affected (0,00 sec)
# 
#  mysql> FLUSH PRIVILEGES;
#  Query OK, 0 rows affected (0,01 sec)
# 
#  Exit MySQL and try to reconnect without sudo.
# 

# mysql> SELECT user,authentication_string,plugin,host FROM mysql.user;
# +------------------+------------------------------------------------------------------------+-----------------------+-----------+
# | user             | authentication_string                                                  | plugin                | host      |
# +------------------+------------------------------------------------------------------------+-----------------------+-----------+
# | bob              | $A$005$}ST^Sp4,vx}pLSQR9zu0FH6cT.Sd/Fc35XsOkyfLyG9eQuTjTjdbC | caching_sha2_password | %         |
# | golden           | *FE160038BE2571772524244B8DC794467DE39466                              | mysql_native_password | %         |
# | root             |                                                                        | caching_sha2_password | %         |
# | debian-sys-maint | $A$005$%f/0E0QU M5ZZ<}7o OQjlBkXSpUJg//G0SEtiyaJ9l4o3K6ILkKEEwphIN1r4 | caching_sha2_password | localhost |
# | mysql.infoschema | $A$005$THISISACOMBINATIONOFINVALIDSALTANDPASSWORDTHATMUSTNEVERBRBEUSED | caching_sha2_password | localhost |
# | mysql.session    | $A$005$THISISACOMBINATIONOFINVALIDSALTANDPASSWORDTHATMUSTNEVERBRBEUSED | caching_sha2_password | localhost |
# | mysql.sys        | $A$005$THISISACOMBINATIONOFINVALIDSALTANDPASSWORDTHATMUSTNEVERBRBEUSED | caching_sha2_password | localhost |
# +------------------+------------------------------------------------------------------------+-----------------------+-----------+
# 7 rows in set (0.00 sec)
# 
# mysql> exit

 - name: Create new databases with names 'socialcoin' and 'security'
   mysql_db:
     name:
      - security
      - socialcoin
     state: present    
   become: true


 - name: copy 2020-01-17.security.sql file with root password credentials
   template: src=templates/2020-01-17.security.j2 dest=/etc/mysql/2020-01-17.security.sql owner=root  mode=0600

 - name: copy 2020-01-17.socialcoin file with root password credentials
   copy: src=templates/2020-01-17.socialcoin.j2 dest=/etc/mysql/2020-01-17.socialcoin.sql owner=root  mode=0600


 - name: Import 2020-01-17.security.sql similar to mysql -u <username> -p <password> < hostname.sql
   mysql_db: 
    state: import
    name: security
    target: /etc/mysql/2020-01-17.security.sql
    # select * from security.User;

 - name: Import 2020-01-17.socialcoin.sql similar to mysql -u <username> -p <password> < hostname.sql
   mysql_db: 
    state: import
    name: socialcoin
    target: /etc/mysql/2020-01-17.socialcoin.sql      
    #select * from socialcoin.tasks;

 - name: Create database user with name 'bob' and password = mysql_root_password with all database privileges
   mysql_user:
      name: bob
      password: "{{ mysql_root_password }}"
      host: '%'
      priv: '*.*:ALL'
      state: present 

 - name: Create database user socialcoinAdmin with name 'socialcoinAdmin' and password mysql_root_password  with all database privileges
   mysql_user:
      name: socialcoinAdmin
      password: "{{ mysql_root_password }}"
      host: '%'
      priv: '*.*:ALL'
      state: present 

 
 
 - name: Create database user socialcoinAdmin with name 'socialcoinAdmin' and password mysql_root_password  with all database privileges
   mysql_user:
      name: socialcoinAdmin
      password: "{{ mysql_root_password }}"
      host: 'localhost'
      priv: '*.*:ALL'
      state: present 

# issues     
#1  Connection fails: Error: ER_NOT_SUPPORTED_AUTH_MODE: Client does not support authentication protocol requested by server; consider upgrading MySQL client
#1  -> ALTER USER 'socialcoinAdmin'@'localhost' IDENTIFIED WITH mysql_native_password BY 'ThisIsCool_2020';
#1  Flush privileges

#2 Access denied for user 'socialcoinAdmin'@'localhost' (using password: NO
#2 GRANT ALL PRIVILEGES ON socialcoinAdmin.* TO 'socialcoinAdmin'@'localhost';
#2 FLUSH PRIVILEGES

# ubuntu@ubuntu-HP-Compaq-8510p:~$ sudo mysql
# [sudo] password for ubuntu: 
# Welcome to the MySQL monitor.  Commands end with ; or \g.
# Your MySQL connection id is 10
# Server version: 8.0.21-0ubuntu0.20.04.4 (Ubuntu)
# 
# Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.
# 
# Oracle is a registered trademark of Oracle Corporation and/or its
# affiliates. Other names may be trademarks of their respective
# owners.
# 
# Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.
# 
# mysql> 
# ubuntu@ubuntu-HP-Compaq-8510p:~$ mysql -u socialcoinAdmin -p
# Enter password: 
# Welcome to the MySQL monitor.  Commands end with ; or \g.
# Your MySQL connection id is 11
# Server version: 8.0.21-0ubuntu0.20.04.4 (Ubuntu)
# 
# Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.
# 
# Oracle is a registered trademark of Oracle Corporation and/or its
# affiliates. Other names may be trademarks of their respective
# owners.
# 
# Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.
# 
# mysql> 


      

 - name: Update and upgrade apt packages
   apt:
     upgrade: full
     update_cache: yes
     cache_valid_time: 86400 #One day

 #REBOOT
 - name: Reboot
   become: True
   shell: "sleep 1 && shutdown -r now +1"
   async: 1
   poll: 0
   notify:
    - wait-for-reboot
   #when: REBOOT == True  

# check check double check.
# sudo mysql -u root
# SELECT user,authentication_string,plugin,host FROM mysql.user;
# select * from socialcoin.tasks;